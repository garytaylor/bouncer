{
  "name": "bouncer",
  "version": "0.0.1",
  "description": "Connect middleware for programatically bouncing back responses to your tests via an HTTP server.  Useful for UI testing without a real backend server",
  "keywords": [
    "bounce",
    "integration",
    "testing",
    "middleware"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/garytaylor/bouncer.git"
  },
  "author": {
    "name": "Gary Taylor",
    "email": "gary.taylor@hismessages.com"
  },
  "dependencies": {
    "underscore": ">= 1.6.0",
    "connect-route": ">= 0.1.4"
  },
  "devDependencies": {
    "jasmine-node": ">= 1.13.1",
    "grunt": ">= 0.4.2",
    "grunt-jasmine-node": ">= 0.1.0"
  },
  "licenses": "MIT",
  "main": "./index.js",
  "engines": {
    "node": ">= 0.10.0"
  },
  "scripts": {
    "test": "jasmine-node"
  },
  "readme": "# Bouncer\n\nConnect middleware for programatically bouncing back responses to your tests via an HTTP server.  Useful for UI testing without a real backend server\n\n```js\napp.use(bouncer({commandUrl: '/bounceCommand'}));\n```\n\nThis middleware, with the help of a connect setup (or any server based on connect such as express) assists in UI testing simply by being a web server\nthat your integration tests (such as protractor) can talk to as well as your tests even though they are different processes.\nSo, your test can say :-\n\n'on all requests made via GET to /users respond with this json '[{\"name\": \"Gary Taylor\", \"username\": \"garyt\"}]''\n\nor\n\n'on the next request only made via GET to /users respond with this json '[{\"name\": \"Someone Else\", \"username\": \"someone\"}]'\n\nWhen the application under test makes its next request to these url's, the web server responds as your test told it to - i.e. it bounces back data from your test\n\n## API\n\n### bouncer(options)\n\nCreate new bounce middleware for use in your connect setup\n\n**options**\n\n    - `commandUrl` The url prefix for communicating with bouncer from the bouncer client within your test code. This is '/commandUrl' by default\n                         but you can change this to prevent clashes with any URL's in your application under test.",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/garytaylor/bouncer/issues"
  },
  "homepage": "https://github.com/garytaylor/bouncer",
  "_id": "bouncer@0.0.1",
  "dist": {
    "shasum": "b35b1c8118c9e6bb3f47c7724ed66f9e0613d2dd"
  },
  "_resolved": "git://github.com/garytaylor/bouncer#c03f0fc285ed240006272717708ba2bf75bb2b92",
  "_from": "bouncer@git://github.com/garytaylor/bouncer"
}
